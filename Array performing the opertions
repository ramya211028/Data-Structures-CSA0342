#include <stdio.h>
#define SIZE 100
void traverse(int arr[], int n) {
    printf("Array elements: ");
    for (int i = 0; i < n; i++) {
        printf("%d ", arr[i]);
    }
    printf("\n");
}
int insert(int arr[], int *n, int element, int position) {
    if (*n >= SIZE || position < 0 || position > *n) {
        return 0; 
    }
    for (int i = *n; i > position; i--) {
        arr[i] = arr[i - 1];
    }
    arr[position] = element;
    (*n)++;
    return 1; 
}
int delete(int arr[], int *n, int position) {
    if (*n <= 0 || position < 0 || position >= *n) {
        return 0; 
    }
    for (int i = position; i < *n - 1; i++) {
        arr[i] = arr[i + 1];
    }
    (*n)--;
    return 1; 
}
int update(int arr[], int n, int position, int newValue) {
    if (position < 0 || position >= n) {
        return 0;
    }
    arr[position] = newValue;
    return 1; 
}
int main() {
    int arr[SIZE], n = 0, choice, element, position, newValue;
    printf("Enter the number of elements (max %d): ", SIZE);
    scanf("%d", &n);
    printf("Enter %d elements:\n", n);
    for (int i = 0; i < n; i++) {
        scanf("%d", &arr[i]);
    }
    while (1) {
        printf("\n--- Array Operations Menu ---\n");
        printf("1. Traverse\n");
        printf("2. Insert\n");
        printf("3. Delete\n");
        printf("4. Update\n");
        printf("5. Exit\n");
        printf("Enter your choice: ");
        scanf("%d", &choice);
        switch (choice) {
            case 1:
                traverse(arr, n);
                break;
            case 2:
                printf("Enter element to insert and position (0 to %d): ", n);
                scanf("%d%d", &element, &position);
                if (insert(arr, &n, element, position))
                    printf("Element inserted successfully.\n");
                else
                    printf("Insertion failed.\n");
                break;
            case 3:
                printf("Enter position to delete (0 to %d): ", n - 1);
                scanf("%d", &position);
                if (delete(arr, &n, position))
                    printf("Element deleted successfully.\n");
                else
                    printf("Deletion failed.\n");
                break;
            case 4:
                printf("Enter position to update and new value (0 to %d): ", n - 1);
                scanf("%d%d", &position, &newValue);
                if (update(arr, n, position, newValue))
                    printf("Element updated successfully.\n");
                else
                    printf("Update failed.\n");
                break;
            case 5:
                printf("Exiting program.\n");
                return 0;
            default:
                printf("Invalid choice! Try again.\n");
        }
    }
    return 0;
}
